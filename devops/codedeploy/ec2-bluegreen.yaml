Parameters:
  ServiceRoleArn:
    Type: String

# https://dev.to/napicella/aws-networking-cheat-sheet-eip-eni-vpc-etc-139m
Resources:
  Application:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: revision-codedeploy-ec2
      ComputePlatform: Server

# https://stelligent.com/2016/01/15/automating-aws-codedeploy-provisioning-in-cloudformation/
# https://stackoverflow.com/questions/60066260/how-to-reference-awscodedeploydeploymentgrouploadbalancerinfo
#  DeploymentApp:
#    Type: AWS::CodeDeploy::DeploymentGroup
#    Properties:
#      ApplicationName: !Ref Application
#      LoadBalancerInfo:
#        TargetGroupInfoList:
#          - Name: test
#      BlueGreenDeploymentConfiguration:
#        DeploymentReadyOption:
#          ActionOnTimeout: CONTINUE_DEPLOYMENT
#        GreenFleetProvisioningOption:
#          Action: DISCOVER_EXISTING
#        TerminateBlueInstancesOnDeploymentSuccess:
#          Action: KEEP_ALIVE
#          #TerminationWaitTimeInMinutes: 10
#      DeploymentStyle:
#        DeploymentType: BLUE_GREEN
#        DeploymentOption: WITH_TRAFFIC_CONTROL # WITH_TRAFFIC_CONTROL | WITHOUT_TRAFFIC_CONTROL
#      Ec2TagFilters:
#        - Key: ManagedByCD
#          Value: true
#          Type: KEY_AND_VALUE
#        - Key: Color
#          Value: Blue
#          Type: KEY_AND_VALUE
#      ServiceRoleArn: !Ref ServiceRoleArn

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /revision/
      RoleName: RevisionDeployRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: { Service: ["codedeploy.amazonaws.com","ec2.amazonaws.com"] }
            Action: ["sts:AssumeRole"]
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforAWSCodeDeploy"
        - "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole"

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: revision-deploy-ip
      Path: /revision/
      Roles: [!Ref InstanceRole]

  # https://aws.amazon.com/fr/premiumsupport/knowledge-center/install-codedeploy-agent-cfn-init/
  # https://linuxtut.com/en/8ff718cd1e66778f88b5/
  InstanceBlue:
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
    Metadata:
      "AWS::CloudFormation::Init":
        config:
          packages:
            apt: { ruby: [] }
          files:
            /home/ubuntu/install:
              source: !Sub "https://aws-codedeploy-${AWS::Region}.s3.amazonaws.com/latest/install"
              mode: "000755"
          commands:
            "00-install-agent":
              command: "./install auto"
              cwd: "/home/ubuntu/"
            "01-cfn-signal":
              command: !Sub "/opt/aws/bin/cfn-signal -e 0 --stack ${AWS::StackName} --resource InstanceBlue --region ${AWS::Region}"
    Properties:
      InstanceType: t2.micro
      ImageId: "ami-0c6ebbd55ab05f070"
      IamInstanceProfile: !Ref InstanceProfile
      #KeyName: ""
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt -y update
          apt -y install python-setuptools wget
          mkdir -p /opt/aws/bin
          wget https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz
          python3 -m easy_install --script-dir /opt/aws/bin aws-cfn-bootstrap-py3-latest.tar.gz
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --region ${AWS::Region} --resource InstanceBlue
      Tags:
        - Key: ManagedByCD
          Value: "true"
        - Key: Color
          Value: "Blue"

  # https://aws.amazon.com/fr/premiumsupport/knowledge-center/install-codedeploy-agent-cfn-init/
  # https://linuxtut.com/en/8ff718cd1e66778f88b5/
  InstanceGreen:
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
    Metadata:
      "AWS::CloudFormation::Init":
        config:
          packages:
            apt: { ruby: [] }
          files:
            /home/ubuntu/install:
              source: !Sub "https://aws-codedeploy-${AWS::Region}.s3.amazonaws.com/latest/install"
              mode: "000755"
          commands:
            "00-install-agent":
              command: "./install auto"
              cwd: "/home/ubuntu/"
            "01-cfn-signal":
              command: !Sub "/opt/aws/bin/cfn-signal -e 0 --stack ${AWS::StackName} --resource InstanceGreen --region ${AWS::Region}"
    Properties:
      InstanceType: t2.micro
      ImageId: "ami-0c6ebbd55ab05f070"
      IamInstanceProfile: !Ref InstanceProfile
      #KeyName: ""
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt -y update
          apt -y install python-setuptools wget
          mkdir -p /opt/aws/bin
          wget https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz
          python3 -m easy_install --script-dir /opt/aws/bin aws-cfn-bootstrap-py3-latest.tar.gz
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --region ${AWS::Region} --resource InstanceGreen
      Tags:
        - Key: ManagedByCD
          Value: "true"
        - Key: Color
          Value: "Green"