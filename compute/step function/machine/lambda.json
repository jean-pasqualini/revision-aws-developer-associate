{
  "StartAt": "LambdaState",
  "States": {
    "LambdaState": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.case",
          "StringEquals": "success",
          "Next": "LambdaSuccessState"
        },
        {
          "Variable": "$.case",
          "StringEquals": "error",
          "Next": "LambdaErrorState"
        },
        {
          "Variable": "$.case",
          "StringEquals": "retry",
          "Next": "LambdaRetryState"
        },
        {
          "Variable": "$.case",
          "StringEquals": "timeout_by_state",
          "Next": "LambdaTimeoutByStateState"
        },
        {
          "Variable": "$.case",
          "StringEquals": "timeout_by_lambda",
          "Next": "LambdaTimeoutByLambdaLambda"
        }
      ]
    },
    "LambdaSuccessState": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "Payload": {},
        "FunctionName": "arn:aws:lambda:eu-west-3:935529178062:function:revision-stepfunction-lambda"
      },
      "Retry": [],
      "End": true
    },
    "LambdaErrorState": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "Payload": {
          "case": "error"
        },
        "FunctionName": "arn:aws:lambda:eu-west-3:935529178062:function:revision-stepfunction-lambda"
      },
      "Retry": [],
      "End": true
    },
    "LambdaTimeoutByStateState": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "TimeoutSeconds": 2,
      "Parameters": {
        "Payload": {
          "case": "sleep",
          "sleep": 3
        },
        "FunctionName": "arn:aws:lambda:eu-west-3:935529178062:function:revision-stepfunction-lambda"
      },
      "Catch": [{
        "ErrorEquals": ["States.TaskFailed", "States.Timeout"],
        "Next": "EndState"
      }],
      "End": true
    },
    "LambdaTimeoutByLambdaLambda": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "Payload": {
          "case": "sleep",
          "sleep": 8
        },
        "FunctionName": "arn:aws:lambda:eu-west-3:935529178062:function:revision-stepfunction-lambda"
      },
      "Catch": [{
        "ErrorEquals": ["States.TaskFailed", "States.Timeout"],
        "Next": "EndState"
      }],
      "End": true
    },
    "LambdaRetryState": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "Payload": {
          "case": "error"
        },
        "FunctionName": "arn:aws:lambda:eu-west-3:935529178062:function:revision-stepfunction-lambda"
      },
      "Retry": [{
        "ErrorEquals": ["States.TaskFailed"],
        "IntervalSeconds": 1,
        "MaxAttempts": 2,
        "BackoffRate": 2.0
      }],
      "Catch": [{
        "ErrorEquals": ["States.TaskFailed"],
        "Next": "EndState"
      }],
      "End": true
    },
    "EndState": {
      "Type": "Pass",
      "End": true
    }
  }
}